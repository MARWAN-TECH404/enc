# Obfuscated with PyObfuscate
# https://www.github.com/MARWAN-TECH404
# SSG-TEAM /FB
# Time : Wed Apr 19 14:01:46 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))
